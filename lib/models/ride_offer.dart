import 'package:json_annotation/json_annotation.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:frontend/utils/date_time_utils.dart';

part 'ride_offer.g.dart';

@JsonSerializable()
class RideOffer {
  final String? id;  // Generated by backend
  @JsonKey(name: 'userId')
  final String? userId;  // Firebase user ID
  final double sourceLatitude;
  final double sourceLongitude;
  final String sourceAddress;
  final double destinationLatitude;
  final double destinationLongitude;
  final String destinationAddress;
  @JsonKey(name: 'departureTime')
  final DateTime departureTime;
  @JsonKey(name: 'maxEstimatedArrivalTime')
  final DateTime maxEstimatedArrivalTime;
  final int detourTimeMinutes;
  final int capacity;
  final int currentNumberOfRequests;  // Will be 0 initially
  final bool sameGender;
  @JsonKey(name: 'createdAt')
  final DateTime? createdAt;  // Generated by backend
  @JsonKey(name: 'updatedAt')
  final DateTime? updatedAt;  // Generated by backend
  @JsonKey(ignore: true)
  final Map<String, dynamic>? extra;

  RideOffer({
    this.id,
    this.userId,
    required this.sourceLatitude,
    required this.sourceLongitude,
    required this.sourceAddress,
    required this.destinationLatitude,
    required this.destinationLongitude,
    required this.destinationAddress,
    required this.departureTime,
    required this.maxEstimatedArrivalTime,
    required this.detourTimeMinutes,
    required this.capacity,
    this.currentNumberOfRequests = 0,
    required this.sameGender,
    this.createdAt,
    this.updatedAt,
    this.extra,
  });

  factory RideOffer.fromJson(Map<String, dynamic> json) {
    final offer = _$RideOfferFromJson(json);
    // Attach any extra fields not defined in the model
    final extra = <String, dynamic>{};
    for (final key in json.keys) {
      if (!offer.toJson().containsKey(key)) {
        extra[key] = json[key];
      }
    }
    return offer.copyWith(extra: extra.isNotEmpty ? extra : null);
  }

  Map<String, dynamic> toJson() {
    final json = _$RideOfferToJson(this);
    // Ensure all DateTime fields have 'Z' suffix
    if (json['departureTime'] != null) {
      json['departureTime'] = formatDateTimeToIso8601(departureTime);
    }
    if (json['maxEstimatedArrivalTime'] != null) {
      json['maxEstimatedArrivalTime'] = formatDateTimeToIso8601(maxEstimatedArrivalTime);
    }
    if (json['createdAt'] != null) {
      json['createdAt'] = formatDateTimeToIso8601(createdAt!);
    }
    if (json['updatedAt'] != null) {
      json['updatedAt'] = formatDateTimeToIso8601(updatedAt!);
    }
    if (extra != null) {
      json.addAll(extra!);
    }
    return json;
  }

  // Create a new instance with updated fields
  RideOffer copyWith({
    String? id,
    String? userId,
    double? sourceLatitude,
    double? sourceLongitude,
    String? sourceAddress,
    double? destinationLatitude,
    double? destinationLongitude,
    String? destinationAddress,
    DateTime? departureTime,
    DateTime? maxEstimatedArrivalTime,
    int? detourTimeMinutes,
    int? capacity,
    int? currentNumberOfRequests,
    bool? sameGender,
    DateTime? createdAt,
    DateTime? updatedAt,
    Map<String, dynamic>? extra,
  }) {
    return RideOffer(
      id: id ?? this.id,
      userId: userId ?? this.userId,
      sourceLatitude: sourceLatitude ?? this.sourceLatitude,
      sourceLongitude: sourceLongitude ?? this.sourceLongitude,
      sourceAddress: sourceAddress ?? this.sourceAddress,
      destinationLatitude: destinationLatitude ?? this.destinationLatitude,
      destinationLongitude: destinationLongitude ?? this.destinationLongitude,
      destinationAddress: destinationAddress ?? this.destinationAddress,
      departureTime: departureTime ?? this.departureTime,
      maxEstimatedArrivalTime: maxEstimatedArrivalTime ?? this.maxEstimatedArrivalTime,
      detourTimeMinutes: detourTimeMinutes ?? this.detourTimeMinutes,
      capacity: capacity ?? this.capacity,
      currentNumberOfRequests: currentNumberOfRequests ?? this.currentNumberOfRequests,
      sameGender: sameGender ?? this.sameGender,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
      extra: extra ?? this.extra,
    );
  }
} 